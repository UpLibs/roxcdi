apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse-wtp'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
group = "roxcdi"
version = "2.0"
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
	
	compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
	
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'javax.enterprise', name: 'cdi-api', version: '1.2'
	
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.jboss.weld.se', name: 'weld-se', version: '2.3.4.Final'
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'RoxCDI',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ss')
        )
    }
}


task fatjar(type: Jar) {
	manifest {
        attributes(
                'Implementation-Title': 'RoxCDI - All Dependencies'
        )
    }
    
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}") {
                authentication(userName: "${nexusUsername}", password: "${nexusPassword}")
            }
        }
    }
}


task copyBeans(type: Copy) {
    from "${project.projectDir}/src/main/resources/META-INF/beans.xml"
    into "${project.buildDir}/classes/main/META-INF"
}

task copyTestBeans(type: Copy) {
    from "${project.projectDir}/src/test/resources/META-INF/beans.xml"
    into "${project.buildDir}/classes/test/META-INF"
}

test {
	// Force a new JVM for every test:
	forkEvery = 1	
	maxParallelForks = 1
}

test.dependsOn([copyBeans, copyTestBeans])


